
When would you want to use a remote repository rather
than keeping all your work local?

    When working with other people on the same files it is
    advantageous to use a remote repository.

Why might you want to always pull changes manually rather
than having Git automatically stay up-to-date with your remote repository?

    Other people might also be working on the same repo. If you are
    always up to date with the remote, you might lose your changes.

Describe the differences between forks, clones, and branches.
When would you use one instead of another?

    A clone is basically a copy/paste of another repo. It keeps a reference
    to the origin as a remote.
    A branch is used to try out new features on your machine before
    merging them back into the master branch.
    A fork is used to copy a remote repo on to your own github account so
    you can make changes that the original author may not want. (You must
    get permission to change another user's repo)

What is the benefit of having a copy of the last known state
of the remote stored locally?

    When it comes time to merge git pull the remote, it is an easy way
    to access the remote, even when offline.

How would you collaborate without using Git or GitHub?
What would be easier, and what would be harder?

    I would probably save multiple versions as separate files and share
    via .zip files. Easier to think about, but much harder as projects
    become more complex.

When would you want to make changes in a separate branch
rather than directly in master? What benefits does each approach have?

    Making changes in a separate branch allows you to keep a branch of
    production code, while also experimenting with new features.
    When collaborating with others on GitHub, this allows you to perfect
    a feature or pull request in isolation of others until it is ready
    to be merged.
